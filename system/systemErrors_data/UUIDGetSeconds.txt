/**
 * ======================================
 * UUIDGetSeconds ( theID )
 *
 * PURPOSE:
 * Extracts the creation timestamp from a numeric UUID created by this family of
 * UUID functions. The returned value can be converted to a more conventional
 * format with the GetAsTimestamp function.
 *
 * RETURNS:
 * A number representing the number of seconds since 0001-01-01 00:00:00 when
 * the UUID passed as a parameter to the function was created. Returns
 * Null ("") if the UUID is in a format that does not contain a retrievable
 * timestamp.
 *
 * PARAMETERS:
 * theID: The UUID to extract a timestamp from.
 *
 * DEPENDENCIES: none
 *
 * HISTORY:
 * MODIFIED on 2011-02-02 by jbante@supportgroup.com to use a format with a
 * one-to-one relationship with UUIDs in RFC 4122 format.
 * MODIFIED on 2010-11-22 by Jeremy Bante of The Support Group
 * (jbante@supportgroup.com) to extract timestamps from the updated output
 * format for UUID.New.
 * CREATED on 2010-09-12 by Jeremy Bante of Kyo Logic (jeremy@kyologic.com).
 * INSPIRED by UUID functions created by Ray Cologon.
 *
 * REFERENCES:
 * Key values Best Practice: http://filemakerstandards.org/pages/viewpage.action?pageId=557386
 * Ray Cologon's uID functions: http://www.nightwing.com.au/FileMaker/demos9/demo910.html
 * UUIDGetAsRFC4122: http://www.briandunning.com/cf/1221
 * UUIDGetAsUUID: http://www.briandunning.com/cf/1273
 * UUIDGetNICAddress: http://www.briandunning.com/cf/1222
 * UUIDGetSeconds: http://www.briandunning.com/cf/1223
 * UUIDNew: http://www.briandunning.com/cf/1220
 * UUIDRandom: http://www.briandunning.com/cf/1246
 * ======================================
 */
Let( [
	~idAsNumber = GetAsNumber ( theID );
	~length = Length ( ~idAsNumber );
	~version = Left ( ~idAsNumber ; ~length - 40 )
];
	If ( ~version < 3;
		GetAsNumber (
			Middle ( ~idAsNumber ; ~length - 38 ; 12 ) //seconds
			& "."
			& Middle ( ~idAsNumber ; ~length - 26 ; 7 ) //sub-seconds
		)
			
		/*else, UUID does not have a timestamp; return Null*/
	)
)