/**
 * =====================================
 * TriggersDisable
 *
 * PURPOSE:
 * TriggersDisable sets global variables to indicate that the current script is
 * suppressing triggers. This script must be called from the context of a
 * script; otherwise, it will not suppress triggers, and it will return False.
 * In order to be suppressed, a script called via trigger should use the
 * TriggersAreActive function to decide whether or not to run.
 *
 * RETURNS:
 * True (1) if called from the context of a script, and therefore triggers have
 * been suppressed; False (0) otherwise.
 *
 * PARAMETERS: none
 *
 * REFERENCED VARIABLES:
 * $$~DISABLETRIGGERS
 * $$~DISABLETRIGGERS.SCRIPTS
 *
 * DEPENDENCIES: none
 *
 * EXAMPLE (script):
 * Set Variable [ $ignoreMe ; TriggersDisable ]
 *        # Do something
 * Set Variable [ $ignoreMe ; TriggersEnable ]
 *
 * NOTES:
 * This function should *always* be used in pairs with the TriggersEnable
 * function.
 *
 * HISTORY:
 * MODIFIED on 2010-12-13 by jbante@supportgroup.com to use names suggested at
 * filemakerstandards.org.
 * CREATED on 2010-12-12 by Jeremy Bante of The Support Group (jbante@supportgroup.com).
 *
 * REFERENCES:
 * Supressible Triggered Scripts Best Practice: http://filemakerstandards.org/display/bp/Suppressible+Triggered+Scripts
 * =====================================
 */

Let ( [
        ~scriptName = Get ( ScriptName );
        ~scriptIsRunning = not IsEmpty ( ~scriptName );
        $$~DISABLETRIGGERS.SCRIPTS =
                If ( ~scriptIsRunning;
                        ~scriptName & "Â¶" & $$~DISABLETRIGGERS.SCRIPTS;
                        /*else*/ $$~DISABLETRIGGERS.SCRIPTS
                );
        $$~DISABLETRIGGERS =
                If ( ~scriptIsRunning;
                        True;
                        /*else*/ $$~DISABLETRIGGERS
                )
];
        ~scriptIsRunning
)