/**
 * =====================================================
 * WindowCenter ( dimension )
 * 
 * PARAMETERS:
 *		@dimension (enumeration) Vertical, Horizontal
 *
 * RETURNS:
 *		(int) Screen position value based on dimension
 *		supplied

 * DEPENDENCIES:
 *		none

 * NOTES:
 *		Using a locally scoped variable within your
 *		script will alter what this function returns
 *		$parentWindowHeight for window height of parent
 *		$parentWindowWidth for window width of parent
 *		$parentWindowTop for window top of parent
 *		$parentWindowLeft for window left of parent
 * =====================================================
 * 
 */

Let ( [
	~vertical = PatternCount ( dimension ; "vert" ) or dimension = "y";
	~horizontal = PatternCount ( dimension ; "horiz" ) or dimension = "x";
	~parentIsSet = not IsEmpty ( $parentWindowTop )
					and not IsEmpty ( $parentWindowLeft )
					and not IsEmpty ( $parentWindowWidth )
					and not IsEmpty ( $parentWindowHeight );
	~parentOnScreen = ~parentIsSet
					and ( $parentWindowTop + $parentWindowHeight ≤ Get ( WindowDesktopHeight )
					and $parentWindowLeft + $parentWindowWidth ≤ Get ( WindowDesktopWidth ) );
	~parentHeight = If ( not ~parentIsSet or not ~parentOnScreen;
			Get ( WindowDesktopHeight );
		/*else*/
			$parentWindowHeight
		);
	~parentWidth = If ( not ~parentIsSet or not ~parentOnScreen;
			Get ( WindowDesktopWidth );
		/*else*/
			$parentWindowWidth
		);
	~childHeight = If ( IsEmpty ( $childWindowHeight );
			Get ( WindowHeight );
		/*else*/
			$childWindowHeight
		);
	~childWidth = If ( IsEmpty ( $childWindowWidth );
			Get ( WindowWidth );
		/*else*/
			$childWindowWidth
		)
];
	Case (
		~vertical;
			( ~parentHeight / 2) - ( ~childHeight / 2 )
			+ If ( ~parentOnScreen ; $parentWindowTop );
		~horizontal;
			( ~parentWidth / 2) - ( ~childWidth / 2 )
			+ If ( ~parentOnScreen ; $parentWindowLeft )
	)
)