/**
 * =====================================
 * ArrayValue ( array ; index )
 * http://www.briandunning.com/cf/1278
 *
 * PURPOSE:
 * Retrieves the contents of a cell from an arbitrary-dimensional array.
 *
 * RETURNS:
 * The contents of the specified array cell. If the contents cannot be
 * retrieved (for example, if the cell does not exist) the function returns
 * Null.
 *
 * PARAMETERS:
 * array: The array from which to extract a value
 * index: The index for the cell from which to extract a value. To address
 * values from multi-dimentional arrays, separate the index for each dimension
 * with ¶, or list the indices with the List function.
 *
 * DEPENDENCIES: none
 *
 * NOTE:
 * This function expects the passed array to be formatted as a quoted value
 * list, where separate values are on separate lines (¶-delimited), and the
 * values have been quoted, such as by the Quote function, so that values can be
 * retrieved with the Evaluate function.
 *
 * EXAMPLE:
 * ArrayValue ( $array ; List ( Get ( RecordNumber ) ; 4 ) )
 *
 * HISTORY:
 * CREATED on 2011-02-11 by Jeremy Bante <http://scr.im/jbantetsg>.
 *
 * REFERENCES:
 * ArrayValue: http://www.briandunning.com/cf/1278
 * ArraySetValue: http://www.briandunning.com/cf/1279
 * =====================================
 */

Let ( [
	~index = GetAsNumber ( GetValue ( index ; 1 ) );
	~indexCount = ValueCount ( index );
	~value = Evaluate ( GetValue ( array ; ~index ) )
];
	Case (
		~indexCount = 1
		or IsEmpty ( ~value );
			~value;

		/*else*/
			ArrayValue ( ~value ; RightValues ( index ; ~indexCount - 1 ) )
	)
)